\documentclass[]{}


%-----------------------------------------------------------------------------------------------------------------------------------------
%
%   GLOBALS
%
%-----------------------------------------------------------------------------------------------------------------------------------------
\newcommand{\DOCTITLE}{

}
\newcommand{\DOCAUTHOR}{

}
\newcommand{\DISCLAIMER}
{
    \topskip0pt
    \vspace*{\fill}
    {
    \centering
        \small{
            THIS DOCUMENT IS INTENDED FOR INTERNAL USE ONLY
        }
    }
    \\
    {
    \centering
        \small{
        UNAUTHORIZED DISTRIBUTION OF THIS DOCUMENT IS STRICTLY PROHIBITED 
        }
    }
    \vspace*{\fill}
}

\usepackage{lmodern}
\usepackage{amssymb,amsmath}
\usepackage{ifxetex,ifluatex}
\usepackage{fixltx2e} % provides \textsubscript
\ifnum 0\ifxetex 1\fi\ifluatex 1\fi=0 % if pdftex
  \usepackage[T1]{fontenc}
  \usepackage[utf8]{inputenc}
\else % if luatex or xelatex
  \ifxetex
    \usepackage{mathspec}
    \usepackage{xltxtra,xunicode}
  \else
    \usepackage{fontspec}
  \fi
  \defaultfontfeatures{Mapping=tex-text,Scale=MatchLowercase}
  \newcommand{\euro}{â‚¬}
\fi
% use upquote if available, for straight quotes in verbatim environments
\IfFileExists{upquote.sty}{\usepackage{upquote}}{}
% use microtype if available
\IfFileExists{microtype.sty}{%
\usepackage{microtype}
\UseMicrotypeSet[protrusion]{basicmath} % disable protrusion for tt fonts
}{}
\ifxetex
  \usepackage[setpagesize=false, % page size defined by xetex
              unicode=false, % unicode breaks when used with xetex
              xetex]{hyperref}
\else
  \usepackage[unicode=true]{hyperref}
\fi
\usepackage[usenames,dvipsnames]{color}
\hypersetup{breaklinks=true,
            bookmarks=true,
            pdfauthor={},
            pdftitle={},
            colorlinks=true,
            citecolor=blue,
            urlcolor=blue,
            linkcolor=magenta,
            pdfborder={0 0 0}}
\urlstyle{same}  % don't use monospace font for urls
\setlength{\parindent}{0pt}
\setlength{\parskip}{6pt plus 2pt minus 1pt}
\setlength{\emergencystretch}{3em}  % prevent overfull lines
\providecommand{\tightlist}{%
  \setlength{\itemsep}{0pt}\setlength{\parskip}{0pt}}
\setcounter{secnumdepth}{0}

\date{}

% Redefines (sub)paragraphs to behave more like sections
\ifx\paragraph\undefined\else
\let\oldparagraph\paragraph
\renewcommand{\paragraph}[1]{\oldparagraph{#1}\mbox{}}
\fi
\ifx\subparagraph\undefined\else
\let\oldsubparagraph\subparagraph
\renewcommand{\subparagraph}[1]{\oldsubparagraph{#1}\mbox{}}
\fi

%-----------------------------------------------------------------------------------------------------------------------------------------
%
%   PAGE SIZE AND MARGINS
%
%-----------------------------------------------------------------------------------------------------------------------------------------
\usepackage[a4paper,headheight=30pt]{geometry}
%\usepackage[letterpaper, portrait, margin=2in]{geometry}
\addtolength{\topmargin}{-.5in}
\addtolength{\textheight}{1.75in}

\usepackage{graphicx}

\usepackage{fancyhdr}
\pagestyle{fancy}


%-----------------------------------------------------------------------------------------------------------------------------------------
% Page break after sections
%-----------------------------------------------------------------------------------------------------------------------------------------
%\usepackage{titlesec}
%\newcommand{\sectionbreak}{\clearpage}

\lhead{
    %left header content
%    \topskip0pt
%    \vspace*{\fill}
    {
    \centering
        \includegraphics[height=2.66em]{template/sc.png}
    }
%    \vspace*{\fill}
}
\chead{
    \topskip0pt
    \vspace*{\fill}
    {
    \centering
        \small{
            THIS DOCUMENT IS INTENDED FOR INTERNAL USE ONLY
        }
    }
    \\
    {
    \centering
        \small{
        UNAUTHORIZED DISTRIBUTION OF THIS DOCUMENT IS STRICTLY PROHIBITED 
        }
    }
    \vspace*{\fill}
}
\rhead{
%    \topskip0pt
%    \vspace*{\fill}
    % right header content
    {
    \centering
        \includegraphics[height=3.25em]{template/scrd.png}
    }
%    \vspace*{\fill}
}
\lfoot{
    % left footer content
    \topskip0pt
    \vspace*{\fill}
    SCRD
    Revision 0.1
    \vspace*{\fill}
}
\cfoot{
    % middle footer content
    \topskip0pt
    \vspace*{\fill}
    {
    \centering
    SCRD Internal Documents Template \\
    \today
    }
    \vspace*{\fill}
}
\rfoot{
    % right footer content
    \topskip0pt
    \vspace*{\fill}
    \thepage
    \vspace*{\fill}
}
% extend the header into the margins
\usepackage{calc}
\fancyheadoffset[L,R]{\marginparsep+\marginparwidth}

%--------------------------------------------------------------------------------------------------------------
%
%	BEGIN DOCUMENT
%
%--------------------------------------------------------------------------------------------------------------
\begin{document}


%--------------------------------------------------------------------------------------------------------------
%
%	TITLE PAGE
%
%--------------------------------------------------------------------------------------------------------------
\begin{titlepage}

\newcommand{\HRule}{\rule{\linewidth}{0.5mm}} % Defines a new command for the horizontal lines, change thickness here

\center % Center everything on the page
 
%----------------------------------------------------------------------------------------
%	HEADING SECTIONS
%----------------------------------------------------------------------------------------

\includegraphics[width=200pt,height=200pt]{../images/rocketry_logo_large.png}\\[1cm] % Include a department/university logo - this will require the graphicx package
\textsc{\Large Space Concordia - Rocketry Division}\\[0.5cm] % Major heading such as course name
\textsc{\large Aurelius CR-2-4G - Structural Team}\\[0.5cm] % Minor heading such as course title

%----------------------------------------------------------------------------------------
%	LOGO SECTION
%----------------------------------------------------------------------------------------

\begin{figure}[ht]
    \centering
    \includegraphics[height=100pt]{../images/vertical_model_simplified.png}\\
\end{figure}

%----------------------------------------------------------------------------------------
%	TITLE SECTION
%----------------------------------------------------------------------------------------

\HRule \\[0.6cm]
{ \Huge \bfseries 
Performance Model Specification
}\\[0.4cm] 

\HRule \\[1cm]
 
%----------------------------------------------------------------------------------------
%	AUTHOR SECTION
%----------------------------------------------------------------------------------------

\begin{minipage}{0.4\textwidth}
\begin{flushleft} \large
	\begin{tabular} {r l} 
        \emph{Author(s):} & Shawn Bulger	\\
	\end{tabular}
\end{flushleft}
\end{minipage}
~
\begin{minipage}{0.4\textwidth}
\begin{flushright} \large
	\begin{tabular} {r l} 
		\emph{Coordinator:} & Dr. Ashok Kaushal 		\\
		\emph{Supervisor:}  & Dr. Mehdi Hojjati 		\\
		\emph{EIR:}         & Dominic Ng  		        \\
	\end{tabular}
\end{flushright}
\end{minipage}\\[2cm]

%----------------------------------------------------------------------------------------
%	DATE SECTION
%----------------------------------------------------------------------------------------

{\large \today}\\[2cm] % Date, change the \today to a set date if you want to be precise

\vfill % Fill the rest of the page with whitespace

\end{titlepage}

\listoffigures
List of Abbreviations
---------------------

  Abbreviation       Description                              Function of                 Units
  ------------------ ---------------------------------------- --------------------------- -------------------------------------------------
  AOA, $\alpha$      Angle of Attack                                                      radians
  COP                Center of pressure                                                   N/A
  COG                Center of gravity                        time                        N/A
  Re                 Reynolds Number                          $$ \rho,\mu,\vec{v},L $$    dimensionless
  Re\_{crit}         Critical Reynolds Number                 $$ \rho,\mu,\vec{v},L $$    dimensionless
  $I_{zz}$           Pitch/Yaw Moment of Inertia              time                        $m^4$
  D                  Drag Force (combined)                                                N
  W                  Weight of the Rocket                                                 N
  R                  Specific Gas Constant                                                $J kg^{-1} K^{-1}$
  T                  Thrust of the Rocket                                                 N
  $t_f$              Fin thickness                            distance                    m
  $L_{cf}$           Aerodynamic Chord Length of Fins         distance                    m
  c                  Speed of sound                           $$ \sqrt{\gamma RT} $$      
  $R_a$              Surface Finish                           $$ distance $$              microns
  M                  Mach Number                              $$ \vec{v}, c $$            dimensionless
  $D_{pa}, C_{pa}$   Parasitic Drag Force, Coefficient                                    
  $D_{fo}, C_{fo}$   Form Drag Force, Coefficient                                         
  $D_{fp}, C_{fp}$   Fin Pressure Drag Force, Coefficient                                 
  $D_{pr}, C_{pr}$   Profile Drag Force, Coefficient                                      
  $D_{in}, C_{in}$   Interference Drag Force, Coefficient                                 
  $D_{ba}, C_{ba}$   Base Drag Force, Coefficient                                         
  $D_{sk}, C_{sk}$   Skin Friction Drag Force, Coefficient                                
  $A_{wb}$           Area of Wetted Body                                                  
  $A_{fr}$           Frontal Reference Area                                               
  OD,$\phi_{bt}$     Outer Diameter                                                       m
  L                  Total Length of Rocket                                               m
  h\_n               Height ofthe nose cone                                               m
  $S_{fc}$           Thrust Specific Fuel Consumption                                     $\dfrac{g}{s}\cdot \dfrac{1}{N} = \dfrac{s}{m}$
  $\dot{m}_{fc}$     Mass Flow Rate due to Fuel Consumption                               $\dfrac{g}{s}\cdot \dfrac{1}{N} = \dfrac{s}{m}$
  $T_{avg}$          Average Thrust                                                       N
  $t_{burn}$         Burn Time                                                            s
  $m_{m_t}$          Total Motor Mass                                                     g
  $W_{m_t}$          Total Motor Weight                                                   N
  $F_N$              Aerodynamic Normal Force                                             N
  $F_A$              Aerodynamic Axial Force                                              N
  $F_L$              Aerodynamic Lift Force                                               N
  $S_{lm}$           Longitudinal Stability Margin                                        Calibers
  $f_B$              Fineness Ratio                                                       dimensionless
  $\mu$              Dynamic Viscosity                                                    $N s / m^2$
  $\nu$              Kinematic Viscosity                      \mu, \rho                   $m^2/s$

Performance Model Specification
===============================

Overview
--------

The goal of this project is to create a Performance Model in Matlab to
simulate the rocket flight characteristics.

Specifically the model should verify the maximum altitude and velocity.
Further developments are explored for future enhancement. A modular
development pattern will be followed order to support expansion. Unit
testing of simulator logic will be undertaken where reasonable, and
further validation will be provided by testing the overall model against
3rd party flight data where available.

The model must take as input the current structural design parameters,
thrust information, and simulated ambient conditions of the launch
environment. Certain parameters will be dynamic; as the motor expends
fuel, the position of the center of gravity and center of pressure will
shift with decreasing mass. Additionally the moments of inertia will be
altered. These dynamic parameters must be considered to maximize the
accuracy of the model[^1].

Requirements
------------

-   the Performance Model must provide the maximum altitude and velocity
    of a axis-symmetric cylindrical body rocket in subsonic flight under
    a known thrust curve considering known dimensional parameters and
    assumptions considered legitimate based on prior research for
    similar applications.

Validation
----------

-   Sub-Models will be unit tested with 3rd party data to ensure
    functional validity where possible.
    -   e.g. the drag model (and all additional submodules therein)
        shall be tested against simple reference geometry to provide
        known drag coefficient and force.
-   Once all Sub-Models are validated individually, the overall model
    will be validated using 3rd-party data.
    -   Primary 3rd-party data source will be OpenRocket simulations.
    -   Where possible, actual rocket flight data will be used to
        validate the model.

Vertical (AOA &lt; 5$^\circ$) Flight Model
------------------------------------------

### Overview

The rocket is to be launched on a guide that may have a $\pm$ 5$^\circ$
angle. Considering the small angle approximation, the sine of 5 degrees
or less is approximately equal to the angle in radians, or zero.

For a 1% error: (@) $$ sin ( \theta \le 15^\circ ) \approx 0 $$
[UManitoba](http://www.physics.umanitoba.ca/undergraduate/phys2260/Lectures/Intro%20Optics%20-%20PPT%20v1part%2004.pdf)

This assumption greatly simplifies the simulation analysis. We consider
that the rocket flies perfectly vertical (experiencing no significant
drift) into still (quiescent) air for which density is described by the
[International Standard Atmosphere (ISA)
model](https://en.wikipedia.org/wiki/International_Standard_Atmosphere).

### Assumptions

-   subsonic flight
-   axis-symmetric rigid body rocket
-   single cylindrical body
-   ~~conical, ogive, or parabolic~~ Von Karman nose shape
-   three or four trapezoidal fins
-   passively controlled (no active thrust or stability control)
-   constant fuel expenditure rate
-   vertical/linear flight within 5 degrees

\cite{box2009} [@box2009]

Dynamic Parameters
------------------

As agreed with Emily on 2015/10/02:

-   the parametric model must provide the moment of inertia, mass, area,
    and center of gravity of all static structural components (nose
    cone, body tube, fins, etc.)
-   the mass, center of mass (relative to the nose tip) of the motor

### Thrust

Thrust is the mechanical force that drives the flight of the rocket. It
is a vector quantity of magnitude and direction. *Thrust* is a reaction
force in the opposite direction of accelerating fluid (exhaust gas)
caused by the combustion of fuel.

*Force* is a change in momentum with time, and is related by Newton's
Second Law

$$ F = \dfrac{m \Delta \vec{v}}{\Delta t} = m\vec{a} $$

*Mass Flow Rate* is found by the product of fluid density, velocity, and
cross-sectional area.

(1) $$ \dot{m} = \rho \vec{v} A $$

[NASA - Thrust](http://www.grc.nasa.gov/WWW/k-12/airplane/thrust1.html)

#### Thrust Equation

(2) $$ T = \dot{m} \Delta \vec{v} $$

[NASA - Thrust
Equation](http://www.grc.nasa.gov/WWW/k-12/airplane/thrsteq.html)

The dynamics of the rocket flights can be simplified to a sum of forces.

Simplifying the rocket flight as ideally one-dimensional, with the
positive z direction being upwards from the launch pad, the impulse is
equal to the thrust of the rocket minus the weight of the rocket and the
drag forces of the rocket interacting with the surrounding air.

$$m(t)\ddot{x}(t) = T(t) - D(\dot{x}) - W(t)$$

Mass is a function of time, which is explained in the *Dynamic
Parameters* section. Drag is a function of velocity, which is explained
in *Drag Model* section. Acceleration can be expressed as the first
derivative of velocity and also the second derivative of position, each
with respect to time.

$$ \vec{a} = \dot{v} = \ddot{x} $$

Each force component can be rearranged and expressed as follows:
$$ \vec{a}_T = \dfrac{T(t)}{m(t)}, \vec{a}_W = \dfrac{W(t)}{m(t)}, \vec{a}_D = \dfrac{D(v)}{m(t)} $$

The net upward acceleration is: $\vec{a}_T - \vec{a}_W - \vec{a}_D$

The sum of forces can be rearranged and acceleration can be solved for:

$$ \vec{a} =  \ddot{x} = \dfrac{1}{m(t)} (T(t) - D(\dot{x}) - W(t)) $$

Acceleration can be integrated to find position and velocity.

$$ \vec{v} = \int \vec{a} dx $$ $$ x = \iint \vec{a} dx $$

Modeling in the frequency domain, integration is represented by the
$\dfrac{1}{s}$ block. A preliminary version of the model follows.

![Alt
text](images/vertical_model_simplified.png "Vertical Model - Simplified")
Figure 1 Vertical Model - Simplified
[vertical\_model\_simplified](#image). Thrust curves are provided by the
manufacturer, and are rated at a constant fuel expenditure rate known as
the specific fuel consumption ($S_{fc}$)

In addition to a RASP file (.eng) and a RockSim file (.rse) Here is an
example of the motor data provided by ThrustCurve.org:

  Parameter           Value
  ------------------- ----------------------------------
  Manufacturer        Cesaroni Technology
  Entered             May 20, 2009
  Last Updated        Jun 26, 2014
  Mfr. Designation    6819M1540-P
  Common Name         M1540
  Motor Type          reload
  Delays              P
  Diameter            75.0mm
  Length              75.7cm
  Total Weight        5906g
  Prop. Weight        3624g
  Cert. Org.          Canadian Association of Rocketry
  Cert. Designation   6819-M1540-IM-P
  Cert. Date          
  Average Thrust      1537.0N
  Maximum Thrust      2328.8N
  Total impulse       6819.4Ns
  Burn Time           4.4s
  Case Info           Pro75-5G
  Propellant Info     Imax
  Availability        regular

\[Alt text\]\[Motor Data Table\] Table 1 Motor Data Table
[motor\_data\_table](#table).

Source: http://www.thrustcurve.org/motorsearch.jsp?id=673

##### Thrust Specific Fuel Consumption

*Thrust Specific Fuel Consumption* is how much fuel is burned for a
given time.

$$ S_{fg} = \dfrac{m}{t_{burn}}\cdot \dfrac{1}{T_{avg}} $$
$$ \left[ \dfrac{g}{s}\cdot \dfrac{1}{N} = \dfrac{s}{m} \right] $$

Since at the time of writing the $S_{fc}$ was not provided by the
manufacturer, the following calculations are used for a first
approximation.

###### Assumptions

-   all propellant is spent during the motor burn time
-   final $S_{fg}$ determined is constant during burn
-   the motor info provided is accurate

> It should be noted that a variance in thrust of $\pm 20 \%$ is
> possible. This and other variance factors are taken into account in
> the *Statistical Analysis* section.

From the table above, the dry propellant weight is given as 3624 grams.
The Average Thrust is given as 1537.0 Newtons, and the total burn time
is given as 4.4 seconds.

Thus, the *Thrust Specific Fuel Consumption* can be determined as
follows:

$$ S_{fg} = \dfrac{3.624 \, kg}{4.4 \, s} \cdot \dfrac{1}{1537.0 \, N} \approx 0.00053587 \dfrac{kg}{N \cdot s} = 5.3587 \times 10^{-4} \dfrac{kg}{N \cdot s} $$

This rate is considered constant.

### Weight

As fuel is expended in generating thrust, the weight of the rocket is
reduced. We can use the *Thrust Specific Fuel Consumption* to determine
the corresponding reduction in weight during burn.

First remove the Average Thrust term to isolate the mass flow rate:

$$ \dot{m} = S_{fG} \cdot T_{avg} = 5.3587 \times 10^{-4} \dfrac{kg}{N \cdot s} \cdot 1537.0 \, N  = 0.8236 \, kg/s $$

This equation can be expressed in terms of Weight through Newton's
2$^nd$ law: $F = m\vec{a}$

$$ \dot{W}_m = \dot{m} \cdot \vec{g} = 0.8236 \, kg/s \cdot 9.81 \, m/s^2 \approx 8.0799 N/s $$

To develop a relation for the change in weight as a function of
$S_{f_c}$

$$ W_f(t) = (m_{f_i} kg - \Delta m(t)) \cdot \vec{g} $$

$$ W_f(t) = (3.624 \, kg - \Delta m(t)) \cdot 9.81 \, m/s^2 $$

$$ W_f(t) = W_{f_i} - \Delta W_f(t)$$

$$ \Delta W_f (t) = \int \dot{W} dt = \dot{W}\cdot t $$

$$ \Delta W_f (t) = \dfrac{\Delta m(t) \cdot \vec{g}}{t}\cdot t = \Delta m (t) \cdot g $$

$$ \Delta m_f(t) = S_{fg} \cdot t $$

Finally, the motor weight as a function of time is
$$ W_m (t) = W_{m_t} - \Delta W_f(t) = W_{m_t} - \dot{m}_{fc} \cdot t $$

#### Matlab Implementation

![Alt
text](images/dynamic_parameter_calculation.png "Dynamic Parameter Calculation")
[Figure - Dynamic Parameter
Calculation](#fig:dynamic_parameter_calculation)

    function [mass, weight, thrust] = dynamic_weight_calculation(thrust_curve, wet_motor_weight, wfc)
    %------------------------------------------------------------------------------
    % INPUT PARAMETERS
    % thrust_curve     - a horizontal data set containing time and thrust
    %                    data from a given motor    
    % wfc              - the rate of motor weight loss due to fuel consumption 
    % wet_motor_weight - the weight in Newtons of a motor *including* 
    %                    propellant
    %
    % NOTE: this implementation skips the W_dot evaluation, just uses mfc 
    % NOTE: UNTESTED
    %------------------------------------------------------------------------------

    % create the weight curve from an input thrust curvve matlab file 
    % with the same dimensions as the input thrust curve
    % weight_curve = {'time','weight'}

    % grab the size of the input thrust curve
    data_length = size(thrust_curve,1);

    % create the corresponding weight curve, same size
    weight = zeros(data_length,1);
        
    %for i = 1:length(thrust_curve)
    for i = 1:data_length
        weight(i,1) = wet_motor_weight - wfc*thrust_curve(i,1); 
    end

    thrust = thrust_curve;
    mass = weight * 9.81;

##### Unit Testing

    %------------------------------------------------------------------------------
    %
    % Dynamic Weight Calculation Test
    %
    % run the function against input thrust data
    %------------------------------------------------------------------------------

    g                = 9.81;
    wet_motor_weight = 5.906*g;
    dry_motor_weight = 3.624*g;
    mfc              = 0.8236*g;

    thrust_curve = thrust_data_import('monotomic_time_thrust_curve.csv');

    burntime     = thrust_curve(:,1);
    thrust_force = thrust_curve(:,2);

    subplot(2,1,1);
    plot(burntime,thrust_force);
    title('Dynamic Weight Calculation Test - Motor Thrust Curve');
    ylabel('Thrust - T (N)');
    xlabel('Time - t (s)');

    [actual_mass, actual_weight, actual_thrust] = dynamic_weight_calculation(thrust_curve, wet_motor_weight, mfc);

    subplot(2,1,2);
    plot(burntime,actual_weight(:,1))
    title('Dynamic Weight Calculation Test - Motor Weight Curve');
    ylabel('Weight - W (N)');
    xlabel('Time - t (s)');

    % TODO need to provide some hand-calculated data to assert against

    % check that the last weight value is equal to the dry motor weight
    %assert ( actual_weight_curve(122,1) == dry_motor_weight );
    last_row = size(actual_weight,1);
    final_weight = actual_weight(last_row, 1);

    % TODO right now this assertion fails because the thrust data is not interpolated
    assert ( dry_motor_weight == final_weight );

The following figure shows the output of the test. The Thrust and Weight
curves are output as expected.

![Alt
text](images/dynamic_weight_calculation_test_figure.png "Dynamic Weight Calculation Test Output")
[Figure - Dynamic Parameter
Calculation](#dynamic_weight_calculation_test_figure)

### Center of Gravity

$$ y_{cg} = \dfrac{m_1 y_1 + m_2 y_2 + ... + m_n y_n}{\sum_{j=1}^n m_j} $$

$$ COG(t) = \dfrac{m_1 y_1 + (m_2 - \Delta m) y_2}{m_1 + m_2 - \Delta m(t)} $$

Where COG(t) is the Center of Gravity as a function of time, $m_1$ is
the static mass (combination of nose cone, body tube, and fins), $m_2$
is the initial mass of the motor, and $\Delta m(t)$ is the change of
mass as a function of time due to fuel expenditure.

### Moments of Inertia

The instantaneous moment of inertia is determined by relating the moment
of inertias of the static structure and the dynamic structure through
the parallel axis theorem evaluated at the total center of gravity
(COG).

The sum of moment of inertias evaluated through the parallel axis
theorem nets the total moment of inertia.

$$ I_n = I_{cm(n)} + M_P d^2 $$

$$ I_T(t) = \sum I_n $$

Where $I_T(t)$ is the total moment of inertia of the rocket as a
function of time, and $I_n$ is the component vector (either static or
dynamic moment of inertia)

\[1\]

Drag Model
----------

Rockets in flight experience multiple sources of drag. The total drag
effect is the sum of all specific drag effects.

The drag model shall take the parametric design parameters and
applicable dynamics parameters (see *Data Model*) to output the Drag
Force and combined drag coefficient.

### Compressible Flow Correction

Special considerations apply when compressibility effects are in play.
These effects occur above Mach 0.3 **\[source?\]**, which will be easily
exceeded by the transonic target velocity of Mach 0.88 **\[source?\]**.

> At low speeds (incompressible flow), the aerodynamic coefficients are
> functions of the angle of attack ($\alpha$) and Reynolds number (Re).

(3) $$ C_i (M < 0.3) = C_i (\alpha, Re) $$ &gt; At higher speeds
    (compressible, Ma $\ge$ 0.4) they are also a function of
    Mach number.

(4) $$ C_i (M \ge 0.3) = C_i (\alpha, Re, M) $$

Particular correction factors are recommended for ranges of Mach number

  Mach Number           Correction Factor
  --------------------- ---------------------------------------------
  $$ M < 0.3 $$         N/A
  $$ 0.3 < M < 0.8 $$   $$ C^`_i = \dfrac{C_i}{\sqrt{1-M^2}} $$
  $$ 0.8 < M < 1.1 $$   $$ C^`_i = \dfrac{C_i}{\sqrt{1-(0.8)^2}} $$

Where $C_i$ is the incompressible drag coefficient and $C^`_i$ is the
compressibility corrected drag coefficient.

[@box2009]

### Incompressible Flow

For Mach &lt; 0.3,

> In the incompressible flow regime the forces can be divided into
> pressure force and viscous force

*Pressure Force* is due to fluid stagnation on areas of the rocket, as
well as due to the low pressure region created beyond the rocket at is
passes quickly through the air.

*Viscous Force* is due to boundary layer effects and interactions of
moving air with surfaces. These forces are highly dependent on Reynold's
number. [@box2009, pg.6]

![Rocket Drag Forces - Axial vs. Normal Caption
\label{rocket_drag_forces_label}](images/rocket_drag_forces.png "Rocket Drag Forces - Axial vs. Normal")

[@box2009, pg.6]

Velocity $\vec{v}$ is the apparent velocity of the center of pressure
relative to the surrounding air.

### Turbulent Effects

Viscous forces are much less severe in turbulent conditions than laminar
conditions - TODO EXPAND

[@box2009, pg.6]

### Drag Force and Coefficients

The total drag force is a function of air velocity (relative to the
rocket body, therefore ideally the velocity of the rocket in quiescent
air conditions), drag coefficient, reference area, and air density.

\begin{equation} 
D_f = D_f (\vec{v}, C_d, A_{ref}, \rho) 
\end{equation}
The drag coefficient $C_d$ is the sum of all component drag coefficients

\begin{equation} 
C_d = \sum C_i = C_{pa} + C_{fo} + C_{pr} + C_{in} + C_{ba} + C_{sk} + C_{fp} + C_{wa} + C_{bt} $$ 
\end{equation}
The *reference area* is the projected area of the body flowing through
air, perpendicular to the direction of flow. \[source?\]

From Fluid Mechanics \[source?\]

\begin{equation}
D_f = \dfrac{1}{2} C_d A_{ref} \rho \vec{v}^2 $$ 
\end{equation}
#### Parasitic Drag

Parasitic drag is the drag due to body features not explicitly designed
and/or imperfections not easily approximated. Examples include launch
guides, ventilation holes, surface roughness, and any damage during
flight.

\begin{equation}
C_{pa}, D_{pa} (A_{ref}, M) $$ 
\end{equation}
##### Parasitic Drag Coefficient

\begin{equation}
C_{pa} = \left( 1.3 - 0.3 \dfrac{(L-h_n)}{OD} \right)_{max} \cdot C_{stagnation} 
\end{equation}
Where *L* is the rocket length, $h_n$ is the height of the nose code,
*OD* is the outer diameter of the rocket, and $C_{stagnation}$ is the
stagnation coefficient.

##### Parasitic Drag Coefficient - Normalized

\begin{equation}
C_{pa_{norm}} = C_{pa} \cdot \left( \pi \cdot (r_{ext}^2 - r_{int}^2) \cdot \left[ 1 - \left( \dfrac{L-h}{OD} \right), 0 \right]_{max} \right) 
\end{equation}
#### Form Drag

\begin{equation} 
C_{fo}, D_{fo} (A_{ref}, M) 
\end{equation}
#### Profile (Pressure) Drag

This is the drag caused by the pressure imbalance as an object moves
through a free stream in the opposite direction to its motion.

\[Pressure drag vs base drag?\]

\begin{equation} 
C_{pr}, D_{pr} (A_{ref}, M) 
\end{equation}
#### Interference Drag

\begin{equation} 
C_{in}, D_{in} (A_{ref}, M) 
\end{equation}
#### Base Drag

Base drag is experienced behind the aft section of the rocket cause by
boundary separation between the flow past the rocket and the surrounding
air. This results in a low pressure region which has an effect analogous
to *pulling* the rocket against its direction of flight.

$$ C_{ba}, D_{ba} ((A_{ref}, M)) $$

#### Skin Friction Drag

Skin Friction Drag is a result of surface roughness. It is a component
effect of parasitic drag.

$$ C_{sk}, D_{sk} (A_{ref}, M) $$

The *Critical Reynold's Number* ($Re_{crit}$) is the value of *Reynold's
Number* where the flow changes from laminar to turbulent

[Trinh, Khanh
Tuoc](http://arxiv.org/ftp/arxiv/papers/1007/1007.0810.pdf) [See Fluids
Text book](fluids%20textbook)

The *Actual Reynold's Number* can be expressed in the following form:

$$ Re = \dfrac{\vec{v} L}{\mu} $$

However, the kinematic viscosity can be substituted as a function of the
local temperature (in Kelvin)

$$ Re = \dfrac{\vec{v} L}{A\cdot T^3 + B\cdot T^2 + C\cdot T - D} $$
Where A = $-1 \times 10^{14}$, B = $1 \times 10^{-10}$, C =
$3 \times 10^{-8}$, and D = $3 \times 10^-6$.

With the critical and actual Reynold's Numbers determined, the
*Uncorrected Skin Friction Drag Coefficient* can now be conditionally
determined

$$
C_{sk_{uncorrected}} = 
\begin{cases}
    0.0148                                & Re < 10^4 \\
    \dfrac{1}{(1.5 ln Re - 5.6)^2}        & 10^4 < Re < Re_{crit} \\
    0.032 \left( \dfrac{R_a}{L} \right)^2 & Re > Re_{crit}
\end{cases}
$$

Finally, the *Corrected Skin Friction Drag Coefficient* is

$$
C_{sk} = \dfrac{ C_{sk,c} \left[ \left( 1+ \dfrac{1}{2 f_B} \right) \cdot A_{wet,body} + \left( 1 + \dfrac{2t_f}{L_{cf}}\cdot \right) A_{wet,fins} \right] }{A_{ref}}
$$

Where $f_b$ is the *Fineness Ratio*, the ratio of the length of the
rocket divided by the outer diameter.

\[botros\]

$$ Re_{crit} = 51 \left( \dfrac{R_a}{L} \right) ^{-1.039} $$

#### Fin Pressure Drag

$$ C_{fp}, D_{fp} (A_{ref}, M) $$

#### Wave Drag

*Wave drag* is drag associated with shock waves (independent of viscous
effects).

> At transonic speed, shock waves form at the nose tip and at the
> leading edge of the fins ... Momentum is transferred from the rocket
> to the surrounding air via these shockwaves

#### Boat-Tail Drag

*Boat-Tail Drag* occurs due to ...

### Matlab Implementation

![Rocket Drag Model Overview
\label{rocket_drag_model_overview_label}](images/rocket_drag_model_overview.png "Rocket Drag Model Overview")

![Rocket Drag Model
\label{rocket_drag_model_label}](images/rocket_drag_model.png "Rocket Drag Model")

Data Model
----------

### Data Store

[Data Stores](http://www.mathworks.com/help/simulink/data-stores.html)

[Data
Store](http://www.mathworks.com/help/simulink/slref/datastorememory.html)

[When to Use a Data
Store](http://www.mathworks.com/help/simulink/ug/when-to-use-a-data-store.html)

[Data Store
Examples](http://www.mathworks.com/help/simulink/ug/data-store-examples.html)

[Data Stores and Software
Verification](http://www.mathworks.com/help/simulink/ug/data-stores-and-software-verification.html)
&gt; see RTCA DO-331, ["Model-Based Development and Verification
Supplement to DO-178C and DO-278A," Section
MB.6.3.3.b.](http://www.rtca.org/Files/ListofAvailableDocsMarch2013.pdf)

The *Data Model* provides static and dynamics parameters as needed by
other models in the simulation.

### Static Parameters

Many parameters are constant throughout the simulation, notably the
structural dimensions. All structural dimensions are generated in the
CATIA Design and output to a spreadsheet, which the simulation will load
and place in a Matlab *Map Container* instance.

> http://www.mathworks.com/help/matlab/map-containers.html

This instance can be accessed by multiple models to clearly and
effectively provide parameter access.

#### Spreadsheet Import and Mapping

``` {#mycode .matlab .numberLines startFrom="1"}
function parametric_data_object = data_parametric_model()
%--------------------------------------------------------------------------------
%
% data_parametric_model.m
%
% Data Access of Parametric Model
%
% Design Parameters for the Rocket are stored in a spreadsheet. 
% These parameters will be accessed and passed along into the simulation to 
% determine other parameters and ultimately to evaluate the performance of 
% those design values
%
%--------------------------------------------------------------------------------
% References
% http://www.mathworks.com/help/simulink/ug/how-to-import-data-from-an-excel-spreadsheet.html
% http://www.mathworks.com/help/matlab/matlab_external/example-reading-excel-spreadsheet-data.html
%--------------------------------------------------------------------------------

% Import the data from Excel
[pnum,ptxt,praw] = xlsread('Parametric_Data.xlsm','Matlab_Data');

% Extract parameters from the imported data 
keyset = ptxt(2:end,1);
valset = praw(2:end,2);

% initialize map object to store parametric data
parametric_data_object = containers.Map(keyset,valset);

end
```

``` {include="../functions/data/data_parametric_model.m"}
```

### Dynamic Parameters

As discussed in the *Dynamic Parameters* section, many parameters are
changing due to flight conditions. An additional *Map Container*
instance is created to handle and deliver these changes to the models
that need them.

Matlab Conventions
------------------

### Importing Data

Tabulated input data is relied upon to drive the simulation (see
*Dynamic Parameters*). The following configuration is investigated to
support this smoothly

[Recommended Methods for Importing
Data](http://www.mathworks.com/help/matlab/import_export/recommended-methods-for-importing-data.html)

[Load Signal Data for
Simulation](http://www.mathworks.com/help/simulink/import-data.html)

[Importing Signal Data in
Simulink](http://www.mathworks.com/help/simulink/ug/importing-signal-data-in-simulink.html)

[Import Data
Structures](http://www.mathworks.com/help/simulink/ug/importing-data-structures-to-a-root-level-input-port.html)

#### From File

The *From File* block in Simulink allows incremental loading of data

> The From File block reads data from a MAT-file and outputs the data as
> a signal. The data is a sequence of samples. Each sample consists of a
> time stamp and an associated data value.

[From File](http://www.mathworks.com/help/simulink/slref/fromfile.html)

##### Mat-File Versions

Data is read incrementally from Mat-File versions 7.3 and above
[Mat-file
Versions](http://www.mathworks.com/help/matlab/import_export/mat-file-versions.html)

#### nD Lookup Tables

#### Specifying Time Data

[Specifying Time Data in
Simulink](http://www.mathworks.com/help/simulink/ug/importing-data-structures-to-a-root-level-input-port.html#bsuwoyk)

### Versioning for Matlab Files

S-function (level 1) blocks are proposed to be used to reference Matlab
files so they can be versioned in Git

#### Background

-   Older versions allowed providing external '.m' file for the *Matlab
    Function* block in Simulink
-   Newer versions are shifting towards the embedded model, where Matlab
    code is complied for execution on test hardware

Naming conventions in Simulink for Matlab files changed after 2011A: -
http://www.goddardconsulting.ca/simulink-using-embedded-matlab.html

#### S-Functions

-   [S-Function Doc with
    Examples](http://www.mathworks.com/help/simulink/matlab-s-functions-1.html)
-   [S-Function
    Features](http://www.mathworks.com/help/simulink/sfg/s-function-features.html)
-   [Writing Level 2 Matlab
    S-Functions](http://www.mathworks.com/help/simulink/sfg/writing-level-2-matlab-s-functions.html)
-   [Level 1 versus Level 2
    S-Functions](http://www.mathworks.com/help/simulink/sfg/level-1-versus-level-2-s-functions.html)
-   [Types of Sample
    Time](http://www.mathworks.com/help/simulink/ug/types-of-sample-time.html)

##### Level 1 vs Level 2

Level 1 S-Functions only support a single input and output (See
S-Function-Features). Level 1 S-Functions appear to be suitable for
continuous sample time, while Level 2 S-Functions are required for
discrete sample time

#### Current Status

-   With the help of Narendra Gollu I am looking into whether the old
    behavior can be achieved easily

### Versioning for Libraries

-   Saving files as libraries and following the existing use cases in
    the documentation will allow robust versioning and collaboration
    workflow

### Unit Testing

#### Simulink Unit Testing

##### Model Referencing

Model Referencing shall be used to test all libraries for expected
behavior.

Model Referencing with Libraries is a little more complicated

1.  Create a Model in which you drag the Library
2.  Right-click the library block in the Model

Start here:

-   http://www.mathworks.com/videos/getting-started-with-model-referencing-68918.html
-   http://www.mathworks.com/help/simulink/ug/creating-a-model-reference.html

#### Background

-   Once a library is created, it can be unit tested
-   A reference model shall be created, to which the library will be
    encapsulated
-   A Test\_Model shall be created which includes the reference model,
    to which test data can be asserted, and output data can be tested

-   Model Referencing
    -   Reference Model
    -   Library Model

### Resources

-   http://www.mathworks.com/help/simulink/slref/model.html

References
==========

[^1]: Here is a footnote

\end{document}
