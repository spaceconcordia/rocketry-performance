function parametric_data_object = data_parametric_model()
%--------------------------------------------------------------------------------
%
% data_parametric_model.m
%
% Data Access of Parametric Model
%
% Design Parameters for the Rocket are stored in a spreadsheet. 
% These parameters will be accessed and passed along into the simulation to 
% determine other parameters and ultimately to evaluate the performance of 
% those design values
%
%--------------------------------------------------------------------------------
% References
% http://www.mathworks.com/help/simulink/ug/how-to-import-data-from-an-excel-spreadsheet.html
% http://www.mathworks.com/help/matlab/matlab_external/example-reading-excel-spreadsheet-data.html
%--------------------------------------------------------------------------------

% Import the data from Excel
%[pnum,ptxt,praw] = xlsread('C:\Users\scorpii\Google Drive\PARAMETRIC DATA\Parametric_Data.xlsm','Matlab_Data');

% Extract parameters from the imported data 
%keyset = praw(2:end,1);
%valset = praw(2:end,2);

%for i = 1:length(keyset)
    %keyset(i) = genvarname(valset(i))
%end

%Jkeyset = genvarname(valset)

% initialize map object to store parametric data
%parametric_data_object = containers.Map(keyset,valset);

%% Import data from spreadsheet
% Script for importing data from the following spreadsheet:
%
%    Workbook:
%    C:\Users\scorpii\Documents\Space\Rocketry\Performance\rocketry-performance\data\Parametric_Data.xlsm
%    Worksheet: Matlab_Data2
%
% To extend the code for use with different selected data or a different
% spreadsheet, generate a function instead of a script.

% Auto-generated by MATLAB on 2015/11/07 20:45:24

%% Import the data
[~, ~, raw] = xlsread('C:\Users\scorpii\Documents\Space\Rocketry\Performance\rocketry-performance\data\Parametric_Data.xlsm','Matlab_Data','B2:B22');

raw = raw.'

raw(cellfun(@(x) ~isempty(x) && isnumeric(x) && isnan(x),raw)) = {''};

%% Replace non-numeric cells with NaN
R = cellfun(@(x) ~isnumeric(x) && ~islogical(x),raw); % Find non-numeric cells
raw(R) = {NaN}; % Replace non-numeric cells

%% Create output variable
data = reshape([raw{:}],size(raw));

%% Allocate imported array to column variable names
area_fin_frontal            = data(:,1)
area_face_fin               = data(:,2)
width_fins_at_tube          = data(:,3)
fins_count                  = data(:,4)
thickness_fins_at_tube      = data(:,5)
area_surface_nose           = data(:,6)
height_fins                 = data(:,7)
diameter_outer              = data(:,8)
surface_roughness           = data(:,9)
length_total_rocket         = data(:,10)
pressure_ambient_ground     = data(:,11)
temperature_ambient_ground  = data(:,12)
distance_tip_to_COG         = data(:,13)
distance_tip_to_COP         = data(:,14)
angle_leading_edge          = data(:,15)
diameter_outer_launch_guide = data(:,16)
diameter_inner_launch_guide = data(:,17)
moment_inertia_rocket       = data(:,18)

assignin('base','area_fin_frontal',area_fin_frontal) 
assignin('base','area_face_fin',area_face_fin)
assignin('base','width_fins_at_tube',width_fins_at_tube)
assignin('base','fins_count',fins_count)
assignin('base','thickness_fins_at_tube',thickness_fins_at_tube)
assignin('base','area_surface_nose',area_surface_nose)
assignin('base','height_fins',height_fins)
assignin('base','diameter_outer',diameter_outer)
assignin('base','surface_roughness',surface_roughness)
assignin('base','length_total_rocket',length_total_rocket)
assignin('base','pressure_ambient_ground',pressure_ambient_ground)
assignin('base','temperature_ambient_ground',temperature_ambient_ground)
assignin('base','distance_tip_to_COG',distance_tip_to_COG)
assignin('base','distance_tip_to_COP',distance_tip_to_COP)
assignin('base','angle_leading_edge',angle_leading_edge)
assignin('base','diameter_outer_launch_guide',diameter_outer_launch_guide)
assignin('base','diameter_inner_launch_guide',diameter_inner_launch_guide)
assignin('base','moment_inertia_rocket',moment_inertia_rocket)

%% Clear temporary variables
clearvars data raw R;

