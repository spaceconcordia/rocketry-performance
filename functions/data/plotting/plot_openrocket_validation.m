%% Trim the array sizes to match the smallest set
arraysize       = size(tout,1);
openrocket_time = simtime(1:arraysize);

%% Set the x-axis
openrocket_xdata = {openrocket_time, openrocket_time, openrocket_time, openrocket_time, openrocket_time};
matlab_xdata     = {tout, tout, tout, tout, tout};

%% Print apogee data to console
fprintf( 'Maximum OpenRocket altitude:      %d m, %d ft \r',...
    max(openrocket_altitude),...
    max(openrocket_altitude)*3.28...
    );
fprintf( 'Maximum Matlab Altitude:          %d m, %d ft \r\n',...
    max(altitude),...
    max(altitude)*3.28...
    );

fprintf( 'Maximum OpenRocket Velocity:      %d m/s, %d ft/s \r',...
    max(openrocket_velocity),...
    max(openrocket_velocity)*3.28...
    );
fprintf( 'Maximum Matlab Velocity:          %d m/s, %d ft/s \r\n',...
    max(velocity),...
    max(velocity)*3.28...
    );

fprintf( 'Maximum OpenRocket acceleration:  %d m/s^2, %d ft/s^2 \r',...
    max(openrocket_acceleration),...
    max(openrocket_acceleration)*3.28...
    );
fprintf( 'Maximum Matlab acceleration:      %d m/s^2, %d ft/s^2 \r\n',...
    max(acceleration),...
    max(acceleration)*3.28...
    );

fprintf( 'Maximum OpenRocket drag force:    %d m/s \r',...
    max(openrocket_acceleration)...
    );
fprintf( 'Maximum Matlab drag force:        %d m/s \r\n',...
    max(acceleration)...
    );

%% Create side-by-side plots    
plot_openrocket_validation_overall
plot_openrocket_validation_drag
plot_openrocket_validation_motor

if confirm('Plot error data?')
    %% Create error plots
    figure;
    plot_error_altitude_v_time;
    figure;
    plot_error_mach_v_time;
    figure;
    plot_error_mass_v_time;
    figure; 
    plot_error_drag_mach;
    figure;
    plot_error_dragcoef_v_mach;
    figure;
    plot_error_coeffrictiondrag_mach;
else
     return
end

