%% Import data from text file.
% Script for importing data from the following text file:
%
%    aurelius_openrocket_worst.csv
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2016/02/24 19:18:06

%% Initialize variables.
filename = 'aurelius_openrocket_worst.csv';
delimiter = ',';
startRow = 11;

%% Read columns of data as DOUBLES:
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'HeaderLines' ,startRow-1, 'ReturnOnError', false);

%% Close the text file.
fclose(fileID);

%% Allocate imported array to column variable names
openrocket_VarName1 = dataArray{:, 1};
openrocket_Altitudem = dataArray{:, 2};
openrocket_Verticalvelocityms = dataArray{:, 3};
openrocket_Verticalaccelerationms = dataArray{:, 4};
openrocket_Totalvelocityms = dataArray{:, 5};
openrocket_Totalaccelerationms = dataArray{:, 6};
openrocket_PositionEastoflaunchm = dataArray{:, 7};
openrocket_PositionNorthoflaunchm = dataArray{:, 8};
openrocket_Lateraldistancem = dataArray{:, 9};
openrocket_Lateraldirection = dataArray{:, 10};
openrocket_Lateralvelocityms = dataArray{:, 11};
openrocket_Lateralaccelerationms = dataArray{:, 12};
openrocket_Latitude = dataArray{:, 13};
openrocket_Longitude = dataArray{:, 14};
openrocket_Gravitationalaccelerationms = dataArray{:, 15};
openrocket_Angleofattack = dataArray{:, 16};
openrocket_Rollrates = dataArray{:, 17};
openrocket_Pitchrates = dataArray{:, 18};
openrocket_Yawrates = dataArray{:, 19};
openrocket_Massg = dataArray{:, 20};
openrocket_Propellantmassg = dataArray{:, 21};
openrocket_Longitudinalmomentofinertiakgm = dataArray{:, 22};
openrocket_Rotationalmomentofinertiakgm = dataArray{:, 23};
openrocket_CPlocationcm = dataArray{:, 24};
openrocket_CGlocationcm = dataArray{:, 25};
openrocket_Stabilitymargincalibers = dataArray{:, 26};
openrocket_Machnumber = dataArray{:, 27};
openrocket_Reynoldsnumber = dataArray{:, 28};
openrocket_ThrustN = dataArray{:, 29};
openrocket_DragforceN = dataArray{:, 30};
openrocket_Dragcoefficient = dataArray{:, 31};
openrocket_Axialdragcoefficient = dataArray{:, 32};
openrocket_Frictiondragcoefficient = dataArray{:, 33};
openrocket_Pressuredragcoefficient = dataArray{:, 34};
openrocket_Basedragcoefficient = dataArray{:, 35};
openrocket_Normalforcecoefficient = dataArray{:, 36};
openrocket_Pitchmomentcoefficient = dataArray{:, 37};
openrocket_Yawmomentcoefficient = dataArray{:, 38};
openrocket_Sideforcecoefficient = dataArray{:, 39};
openrocket_Rollmomentcoefficient = dataArray{:, 40};
openrocket_Rollforcingcoefficient = dataArray{:, 41};
openrocket_Rolldampingcoefficient = dataArray{:, 42};
openrocket_Pitchdampingcoefficient = dataArray{:, 43};
openrocket_Coriolisaccelerationms = dataArray{:, 44};
openrocket_Referencelengthcm = dataArray{:, 45};
openrocket_Referenceareacm = dataArray{:, 46};
openrocket_Verticalorientationzenith = dataArray{:, 47};
openrocket_Lateralorientationazimuth = dataArray{:, 48};
openrocket_Windvelocityms = dataArray{:, 49};
openrocket_AirtemperatureC = dataArray{:, 50};
openrocket_Airpressurembar = dataArray{:, 51};
openrocket_Speedofsoundms = dataArray{:, 52};
openrocket_Simulationtimesteps = dataArray{:, 53};
openrocket_Computationtimes = dataArray{:, 54};
openrocket_CorrectiveMomentCoefficient = dataArray{:, 55};
openrocket_Dampingmomentcoefficient = dataArray{:, 56};
openrocket_DynamicPressure = dataArray{:, 57};
openrocket_NaturalFrequency = dataArray{:, 58};

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans raw col numericData rawData row regexstr result numbers invalidThousandsSeparator thousandsRegExp me rawNumericColumns rawCellColumns J;

%% calculating additional parameters
% Vt^2*Ar*(Cn/?)*(Cp-Cg)*(P/(287.058*T)) / 2  
%{
openrocket_Correctivemomentcoefficient = ... 
    openrocket_DynamicPressurembar*1000 .* ...
    (diameter_outer/100).^2 .* pi/4 .* ... 
    openrocket_Normalforcecoefficient./openrocket_Angleofattack ...
    .* ...
    (openrocket_CPlocationcm - openrocket_CGlocationcm) / 100;


openrocket_Dampingmomentcoefficient = ... 
    openrocket_DynamicPressurembar * ...
    diameter_outer^2 * pi/4 * ... 
    openrocket_Normalforcecoefficient * ...
    (openrocket_CPlocationcm - openrocket_CGlocationcm) / 100;
%}

openrocket_damping_arm = openrocket_Dampingmomentcoefficient ./ ...
    (openrocket_DynamicPressure * diameter_outer^2 * pi/4); 

openrocket_DampingRatio = ...
    openrocket_Dampingmomentcoefficient ...
    ./ ...
    ( ...
    (2*openrocket_Longitudinalmomentofinertiakgm .* abs(openrocket_CorrectiveMomentCoefficient)).^(1/2) ...
    );
    
%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;

%% Find value index of apogee for each source
% OpenRocket
meter2feet = 3.28;
indexmax_openrocket = find(max(openrocket_Altitudem) == openrocket_Altitudem);
time_to_apogee_openrocket = openrocket_VarName1(indexmax_openrocket);
openrocket_altitude_max = openrocket_Altitudem(indexmax_openrocket);
openrocket_altitude_max = openrocket_altitude_max(1)*meter2feet;


%% Max Altitude
fprintf( 'OpenRocket time to apogee :                 %d s \r', ...
    time_to_apogee_openrocket(end)...
);

%% Max Altitude
fprintf( 'Maximum OpenRocket altitude:                %d m, %d ft \r', ...
    max(openrocket_Altitudem),...
    max(openrocket_Altitudem)*3.28 ...
);

%% Max Velocity
openrocket_Verticalvelocityms_max = max(openrocket_Verticalvelocityms);
openrocket_Verticalvelocityft_max = max(openrocket_Verticalvelocityms)*3.28;

fprintf( 'Maximum OpenRocket Vertical Velocity:       %d m/s, %d ft/s \r', ...
    max(openrocket_Verticalvelocityms),...
    max(openrocket_Verticalvelocityms)*3.28 ...
);

%% Max Mach
fprintf( 'Maximum OpenRocket Mach Number:             %d m/s \r', ...
    max(openrocket_Machnumber)...
);

%% Max Velocity
openrocket_Totalaccelerationms_max = max(openrocket_Totalaccelerationms);
fprintf( 'Maximum OpenRocket acceleration:  %d m/s^2, %d ft/s^2, %d g \r', ...
    openrocket_Totalaccelerationms_max ,...
    openrocket_Totalaccelerationms_max/3.28 ,...
    openrocket_Totalaccelerationms_max/9.81 ...
);

fprintf( 'Maximum OpenRocket drag force:              %d N \r',...
    max(openrocket_DragforceN)...
);

indexguide = dsearchn(openrocket_Altitudem, launch_guide_length);
openrocket_guide_velocity = openrocket_Verticalvelocityms(indexguide) / 3.28;
fprintf( 'OpenRocket Velocity at launch guide:        %d m/s \r',...
    openrocket_guide_velocity...
);
